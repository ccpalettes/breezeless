/**
 * Border.
 */

// .bl-border(2px; dotted; #847299); .bl-border(solid; 3px; #666);
.bl-border (@border-width; @border-style; @border-color) when not (@border-width=_DIRECTION_ROUTE_) and not (@border-width=_DIRECTION_) {
  border: @border-width @border-style @border-color;
}

// .bl-border(2px);
.bl-border (@border-width) when (isnumber(@border-width)) {
  .bl-border(@border-width; solid; #000);
}

// .bl-border(dashed);
.bl-border (@border-style) when (iskeyword(@border-style)) {
  .bl-border(1px; @border-style; #000);
}

// .bl-border(#F00); .bl-border(blue);
.bl-border (@border-color) when (iscolor(@border-color)) {
  .bl-border(1px; solid; @border-color);
}

//.bl-border(2px; dotted);
.bl-border (@border-width; @border-style) when (isnumber(@border-width)) and (iskeyword(@border-style)) {
  .bl-border(@border-width; @border-style; #000);
}

// .bl-border(solid; 3px);
.bl-border (@border-style; @border-width) when (isnumber(@border-width)) and (iskeyword(@border-style)) {
  .bl-border(@border-width; @border-style; #000);
}

// .bl-border(2px; #999);
.bl-border (@border-width; @border-color) when (isnumber(@border-width)) and (iscolor(@border-color)) {
  .bl-border(@border-width; solid; @border-color);
}

// .bl-border(green; 1px);
.bl-border (@border-color; @border-width) when (isnumber(@border-width)) and (iscolor(@border-color)) {
  .bl-border(@border-width; solid; @border-color);
}

// .bl-border(solid; #0F0);
.bl-border (@border-style; @border-color) when (iskeyword(@border-style)) and (iscolor(@border-color)) {
  .bl-border(1px; @border-style; @border-color);
}

// .bl-border(#A2B109; dashed);
.bl-border (@border-color; @border-style) when (iskeyword(@border-style)) and (iscolor(@border-color)) {
  .bl-border(1px; @border-style; @border-color);
}

// .bl-border(6px dotted); .bl-border(yellow 2px); .bl-border(none, #222;);
.bl-border (@border-style-list) when (length(@border-style-list) = 2) {
  .bl-border(extract(@border-style-list, 1); extract(@border-style-list, 2));
}

// .bl-border(0 dashed #A87); .bl-border(#BBB solid 9px);
.bl-border (@border-style-list) when (length(@border-style-list) = 3) {
  .bl-border(extract(@border-style-list, 1); extract(@border-style-list, 2); extract(@border-style-list, 3));
}

// .bl-border(6px; 3px; 1px; 2px); .bl-border(#FFF000 solid; null; 3px, dashed; 0 dotted #909090);
.bl-border (@top-border-style-list; @right-border-style-list; @bottom-border-style-list; @left-border-style-list) when not (@top-border-style-list=_DIRECTION_) {
  .bl-border(_DIRECTION_ROUTE_; top; @top-border-style-list);
  .bl-border(_DIRECTION_ROUTE_; right; @right-border-style-list);
  .bl-border(_DIRECTION_ROUTE_; bottom; @bottom-border-style-list);
  .bl-border(_DIRECTION_ROUTE_; left; @left-border-style-list);
}

.bl-border (_DIRECTION_ROUTE_; @border-direction; @border-style-list) when not (@border-style-list = null) and (length(@border-style-list) = 1) {
  .bl-border(_DIRECTION_; @border-direction; @border-style-list);
}

.bl-border (_DIRECTION_ROUTE_; @border-direction; @border-style-list) when (length(@border-style-list) = 2) {
  .bl-border(_DIRECTION_; @border-direction; extract(@border-style-list, 1); extract(@border-style-list, 2));
}

.bl-border (_DIRECTION_ROUTE_; @border-direction; @border-style-list) when (length(@border-style-list) = 3) {
  .bl-border(_DIRECTION_; @border-direction; extract(@border-style-list, 1); extract(@border-style-list, 2); extract(@border-style-list, 3));
}

.bl-border (_DIRECTION_; @border-direction; @border-width) when (isnumber(@border-width)) {
  .bl-border(_DIRECTION_; @border-direction; @border-width; solid; #000);
}

.bl-border (_DIRECTION_; @border-direction; @border-style) when (iskeyword(@border-style)) {
  .bl-border(_DIRECTION_; @border-direction; 1px; @border-style; #000);
}

.bl-border (_DIRECTION_; @border-direction; @border-color) when (iscolor(@border-color)) {
  .bl-border(_DIRECTION_; @border-direction; 1px; solid; @border-color);
}

.bl-border (_DIRECTION_; @border-direction; @border-width; @border-style) when (isnumber(@border-width)) and (iskeyword(@border-style)) {
  .bl-border(_DIRECTION_; @border-direction; @border-width; @border-style; #000);
}

.bl-border (_DIRECTION_; @border-direction; @border-style; @border-width) when (isnumber(@border-width)) and (iskeyword(@border-style)) {
  .bl-border(_DIRECTION_; @border-direction; @border-width; @border-style; #000);
}

.bl-border (_DIRECTION_; @border-direction; @border-width; @border-color) when (isnumber(@border-width)) and (iscolor(@border-color)) {
  .bl-border(_DIRECTION_; @border-direction; @border-width; solid; @border-color);
}

.bl-border (_DIRECTION_; @border-direction; @border-color; @border-width) when (isnumber(@border-width)) and (iscolor(@border-color)) {
  .bl-border(_DIRECTION_; @border-direction; @border-width; solid; @border-color);
}

.bl-border (_DIRECTION_; @border-direction; @border-style; @border-color) when (iskeyword(@border-style)) and (iscolor(@border-color)) {
  .bl-border(_DIRECTION_; @border-direction; 1px; @border-style; @border-color);
}

.bl-border (_DIRECTION_; @border-direction; @border-color; @border-style) when (iskeyword(@border-style)) and (iscolor(@border-color)) {
  .bl-border(_DIRECTION_; @border-direction; 1px; @border-style; @border-color);
}

.bl-border (_DIRECTION_; @border-direction; @border-width; @border-style; @border-color) {
  border-@{border-direction}: @border-width @border-style @border-color;
}

/**
 * inline-block display fix. IE6 and above.
 */
.bl-inline-block-fix {
  display: inline-block;
  *display: inline;
  zoom: 1;
}

/**
 * Formal syntax: none | text | all | element
 */
.bl-user-select (@value) {
  -webkit-user-select: @value;
  -moz-user-select: @value;
  -ms-user-select: @value;
  user-select: @value;
}

/**
 * clearfix.
 * http://nicolasgallagher.com/micro-clearfix-hack/
 */
.bl-clearfix () {
  &:before, &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }

  *zoom: 1;
}

/**
 * box-shadow.
 */

// single shadow, .bl-box-shadow(3px 3px 6px 2px rgba(0, 0, 0, 0.2));
.bl-box-shadow (@shadow) {
  -webkit-box-shadow: @shadow;
  -moz-box-shadow: @shadow;
  box-shadow: @shadow;
}

// multiple shadows, .bl-box-shadow(1px 1px 2px 0 #F00; inset -1px -1px 2px 0 #00F);
.bl-box-shadow (@shadow1; @shadow2; ...) {
  @shadow-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");
  -webkit-box-shadow: @shadow-list;
  -moz-box-shadow: @shadow-list;
  box-shadow: @shadow-list;
}

/**
 * border-radius
 *
 * .bl-border-radius(e("60px 20px / 30px"));
 * .bl-border-radius(10px);
 */
.bl-border-radius (@radius) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

/**
 * opacity
 */

// .bl-opacity(50%);
.bl-opacity (@opacity) when (isnumber(@opacity)) and not (ispercentage(@opacity)) {
  @ms-opacity: @opacity * 100;

  // IE 8
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ms-opacity})";

  // IE 6-7
  filter: ~"alpha(opacity=@{ms-opacity})";

  opacity: @opacity;
}

// .bl-opacity(30%);
.bl-opacity (@opacity) when (ispercentage(@opacity)) {
  .bl-opacity(unit(@opacity) / 100);
}

/**
 * transition
 */

// single transition, .bl-transition(width 2s); .bl-transition(transform 1s);
.bl-transition (@transition) {
  @-webkit-transition: replace(~"@{transition}", "transform", "-webkit-transform");
  @-moz-transition: replace(~"@{transition}", "transform", "-moz-transform");
  @-o-transition: replace(~"@{transition}", "transform", "-o-transform");
  @merged-transition: replace(~"@{transition}", "(^.*)(transform)(.*$)", "$1$2$3,$1-webkit-$2$3");

  -webkit-transition: @-webkit-transition;
  -moz-transition: @-moz-transition;
  -o-transition: @-o-transition;
  transition: @merged-transition;
}

// multiple transitions, .bl-transition(width 2s; height 2s); .bl-transition(transform 2s; width 1s);
.bl-transition (@transition1; @transition2; ...) {
  @transition-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");
  @-webkit-transition-list: replace(~"@{transition-list}", "transform", "-webkit-transform");
  @-moz-transition-list: replace(~"@{transition-list}", "transform", "-moz-transform");
  @-o-transition-list: replace(~"@{transition-list}", "transform", "-o-transform");
  @merged-transition-list: replace(~"@{transition-list}", "(^.*,|^)((.*?)(transform)(.*?))(,.*|$)", "$1$2,$3-webkit-$4$5$6");

  -webkit-transition: @transition-list;
  -moz-transition: @transition-list;
  -o-transition: @transition-list;
  transition: @merged-transition-list;
}

// .bl-transition-property(top); .bl-transition-property(transform);
.bl-transition-property (@property) {
  @-webkit-property: replace(~"@{property}", "transform", "-webkit-transform");
  @-moz-property: replace(~"@{property}", "transform", "-moz-transform");
  @-o-property: replace(~"@{property}", "transform", "-o-transform");
  @merged-property: replace(~"@{property}", "transform", "transform,-webkit-transform");

  -webkit-transition-property: @-webkit-property;
  -moz-transition-property: @-moz-property;
  -o-transition-property: @-o-property;
  transition-property: @merged-property;
}

// .bl-transition-property(width, height); .bl-transition-property(transform; color);
.bl-transition-property (@property1; @property2; ...) {
  @property-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");
  @-webkit-property-list: replace(~"@{property-list}", "transform", "-webkit-transform");
  @-moz-property-list: replace(~"@{property-list}", "transform", "-moz-transform");
  @-o-property-list: replace(~"@{property-list}", "transform", "-o-transform");
  @merged-property-list: replace(~"@{property-list}", "transform", "transform,-webkit-transform");

  -webkit-transition-property: @property-list;
  -moz-transition-property: @property-list;
  -o-transition-property: @property-list;
  transition-property: @merged-property-list;
}



// .bl-transition-duration(1s);
.bl-transition-duration (@duration) {
  -webkit-transition-duration: @duration;
  -moz-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}

// .bl-transition-duration(1s; 2s);
.bl-transition-duration (@duration1; @duration2; ...) {
  @duration-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");

  -webkit-transition-duration: @duration-list;
  -moz-transition-duration: @duration-list;
  -o-transition-duration: @duration-list;
  transition-duration: @duration-list;
}

// .bl-transition-timing-function(ease);
.bl-transition-timing-function (@timing-function) {
  -webkit-transition-timing-function: @timing-function;
  -moz-transition-timing-function: @timing-function;
  -o-transition-timing-function: @timing-function;
  transition-timing-function: @timing-function;
}

// .bl-transition-timing-function(ease-in; ease-out);
.bl-transition-timing-function (@timing-function1; @timing-function2; ...) {
  @timing-function-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");

  -webkit-transition-timing-function: @timing-function-list;
  -moz-transition-timing-function: @timing-function-list;
  -o-transition-timing-function: @timing-function-list;
  transition-timing-function: @timing-function-list;
}

// .bl-transition-delay(1s);
.bl-transition-delay (@delay) {
  -webkit-transition-delay: @delay;
  -moz-transition-delay: @delay;
  -o-transition-delay: @delay;
  transition-delay: @delay;
}

// .bl-transition-delay(1s; 2s);
.bl-transition-delay (@delay1; @delay2; ...) {
  @delay-list: replace(~`"@{arguments}"`,"[\[\]]", "", "g");

  -webkit-transition-delay: @delay-list;
  -moz-transition-delay: @delay-list;
  -o-transition-delay: @delay-list;
  transition-delay: @delay-list;
}

